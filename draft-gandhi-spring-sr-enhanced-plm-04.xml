<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC0768 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0768.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4656 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4656.xml">
<!ENTITY RFC5357 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5357.xml">
<!ENTITY RFC8174 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
<!ENTITY RFC2104 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2104.xml">
<!ENTITY RFC2113 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2113.xml">
<!ENTITY RFC4868 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4868.xml">
<!ENTITY RFC7880 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7880.xml">
<!ENTITY RFC6038 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6038.xml">
<!ENTITY RFC6437 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6437.xml">
<!ENTITY RFC6936 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6936.xml">
<!ENTITY RFC7506 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7506.xml">
<!ENTITY RFC7820 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7820.xml">
<!ENTITY RFC8029 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8029.xml">
<!ENTITY RFC8186 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8186.xml">
<!ENTITY RFC8321 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8321.xml">
<!ENTITY RFC8402 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8402.xml">
<!ENTITY RFC8754 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8754.xml">
<!ENTITY RFC8762 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8762.xml">
<!ENTITY RFC8972 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.8972.xml">
<!ENTITY I-D.ietf-spring-segment-routing-policy SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-segment-routing-policy.xml">
<!ENTITY I-D.ietf-spring-mpls-path-segment SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-mpls-path-segment.xml">
<!ENTITY I-D.ietf-pce-binding-label-sid SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-pce-binding-label-sid.xml">
<!ENTITY I-D.ietf-pce-sr-bidir-path SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-pce-sr-bidir-path.xml">
<!ENTITY I-D.gandhi-spring-stamp-srpm SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.gandhi-spring-stamp-srpm.xml">
<!ENTITY I-D.gandhi-ippm-stamp-srpm SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.gandhi-ippm-stamp-srpm.xml">
<!ENTITY I-D.ietf-spring-srv6-network-programming SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-spring-srv6-network-programming.xml">
<!ENTITY I-D.ietf-mpls-spl-terminology SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-mpls-spl-terminology.xml">
]>
<rfc category="std" docName="draft-gandhi-spring-sr-enhanced-plm-04"
     ipr="trust200902" submissionType="IETF">
  <!-- Generated by id2xml 1.5.0 on 2020-02-06T01:41:26Z -->

  <?rfc compact="yes"?>

  <?rfc text-list-symbols="oo*+-"?>

  <?rfc subcompact="no"?>

  <?rfc sortrefs="no"?>

  <?rfc symrefs="yes"?>

  <?rfc strict="yes"?>

  <?rfc toc="yes"?>

  <front>
    <title abbrev="Performance and Liveness Monitoring in SR">
    Enhanced Performance and Liveness Monitoring in Segment Routing Networks</title>

    <author fullname="Rakesh Gandhi" initials="R." role="editor"
            surname="Gandhi">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <postal>
          <street>Canada</street>
        </postal>

        <email>rgandhi@cisco.com</email>
      </address>
    </author>

    <author fullname="Clarence Filsfils" initials="C." surname="Filsfils">
      <organization>Cisco Systems, Inc.</organization>

      <address>
        <email>cfilsfil@cisco.com</email>
      </address>
    </author>

    <author fullname="Navin Vaghamshi" initials="N." surname="Vaghamshi">
      <organization>Reliance</organization>

      <address>
        <email>Navin.Vaghamshi@ril.com</email>
      </address>
    </author>

    <author fullname="Moses Nagarajah" initials="M." surname="Nagarajah">
      <organization>Telstra</organization>

      <address>
        <email>Moses.Nagarajah@team.telstra.com</email>
      </address>
    </author>

    <author fullname="Richard Foote" initials="R." surname="Foote">
      <organization>Nokia</organization>

      <address>
        <email>footer.foote@nokia.com</email>
      </address>
    </author>

    <date day="08" month="February" year="2021"/>

    <workgroup>SPRING Working Group</workgroup>

    <abstract>
      <t>Segment Routing (SR) leverages the source routing paradigm. SR is
      applicable to both Multiprotocol Label Switching (SR-MPLS) and IPv6
      (SRv6) data planes.  This document defines procedures for 
      Enhanced Performance and Liveness Monitoring (PLM) 
      for end-to-end SR paths including SR Policies for both SR-MPLS and SRv6 data planes,
      those reduce the deployment and operational complexities in a network.</t>
    </abstract>
  </front>

  <middle>
    <section anchor="sect-1" title="Introduction">
      <t>Segment Routing (SR) leverages the source routing paradigm and
      greatly simplifies network operations for Software Defined Networks
      (SDNs). SR is applicable to both Multiprotocol Label Switching (SR-MPLS)
      and IPv6 (SRv6) data planes <xref target="RFC8402"/>. SR
      Policies as defined in <xref format="default"
      target="I-D.ietf-spring-segment-routing-policy"/> are used to steer
      traffic through a specific, user-defined paths using a stack of
      Segments. Built-in Performance Measurement as well as 
      Liveness Monitoring for Connectivity Verification (CV) and 
      Continuity Check (CC) are essential requirements to
      provide Service Level Agreements (SLAs) in SR networks.</t>

      <t>The Simple Two-way Active Measurement Protocol (STAMP) provides
      capabilities for the measurement of various performance
      metrics in IP networks <xref target="RFC8762"/>. 
      It eliminates the need for control protocol by using
      configuration and management model to provision and manage test sessions.
      The STAMP can be used for Performance Measurement (PM) in SR networks as well as 
      liveness monitoring and connectivity loss detection of SR paths. However, 
      the STAMP requires protocol support on the Session-Reflector to process
      the STAMP test packets as packets need to be punted from the forwarding fast path 
      (to slow path or control plane) on the Session-Reflector and 
      STAMP reply test packets need to be generated.
      This limits the scale for number of STAMP test sessions and faster fault detection intervals.</t>

      <t>For Liveness Monitoring, Seamless Bidirectional Forwarding Detection (S-BFD)
      <xref target="RFC7880"/> can be used in SR networks.
      However, S-BFD requires protocol support on the BFD-Reflector to process
      the S-BFD packets as packets need to be punted from the forwarding fast path and 
      generate the reply packets thereby limiting the scale for number S-BFD sessions and faster fault
      detection intervals. In addition, S-BFD protocol does not have the
      capability today to enable performance measurement in a network.</t>

      <t>Enabling multiple protocols, S-BFD for liveness
      monitoring and STAMP for performance measurement increases
      the deployment and operational complexities a network.
      Also, implementing multiple protocols in a hardware significantly 
      increases the development cost.</t>

      <t>This document defines procedures for 
      Enhanced Performance and Liveness Monitoring (PLM) 
      for end-to-end SR paths including SR Policies for both SR-MPLS and SRv6 data planes, 
      those reduce the deployment and operational complexities in a network.
      The procedures use the new test packet formats those have the timestamps at the same locations
      as the base STAMP test packets to leverage the existing hardware support for STAMP.</t>

    </section>

    <section anchor="sect-2" title="Conventions Used in This Document">
      <section anchor="sect-2.1" title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
        appear in all capitals, as shown here.</t>
      </section>

      <section anchor="sect-2.2" title="Abbreviations">
        <t>S-BFD: Seamless Bidirectional Forwarding Detection.</t>

        <t>BSID: Binding Segment ID.</t>

        <t>ECMP: Equal Cost Multi-Path.</t>

        <t>EB: Endpoint Behaviour.</t>
        
        <t>HMAC: Hashed Message Authentication Code.</t>
    
        <t>MBZ: Must be Zero.</t>

        <t>MPLS: Multiprotocol Label Switching.</t>

        <t>PLM: Performance and Liveness Monitoring.</t>

        <t>PM: Performance Measurement.</t>

        <t>PTP: Precision Time Protocol.</t>

        <t>SID: Segment ID.</t>

        <t>SL: Segment List.</t>

        <t>SR: Segment Routing.</t>

        <t>SRH: Segment Routing Header.</t>

        <t>SR-MPLS: Segment Routing with MPLS data plane.</t>

        <t>SRv6: Segment Routing with IPv6 data plane.</t>

        <t>STAMP: Simple Two-way Active Measurement Protocol.</t>

      </section>

   <section title="Reference Topology" anchor="sect-2.3"><t>
   In the reference topology shown below, the Session-Sender R1 initiates a
   PLM test packet and the Session-Reflector R3
   transmits a PLM return test packet.  The PLM return test packet is 
   transmitted back to the Session-Sender R1 
   on the same path or a different path in the reverse direction.</t>  

   <t>The Session-Sender R1 and Session-Reflector R3 are
   connected via an SR path <xref target="RFC8402"/>.  
   The SR path may be an SR Policy <xref target="I-D.ietf-spring-segment-routing-policy"/> 
   on node R1 (called head-end) with destination to node R3 (called tail-end).</t>

   <figure><artwork><![CDATA[
                       T1 
                      / 
             +-------+    PLM Test Packet    +-------+
             |       | - - - - - - - - - - - |       |
             |   R1  |======================||   R3  |
             |       |<- - - - - - - - - - - |       |
             +-------+   Return Test Packet  +-------+
                      \  
                       T4 

            Session-Sender                Session-Reflector
                                          (Simply Forward)

                       Reference Topology
]]></artwork>
    </figure>
    </section>
    </section>

 
  <section anchor="sect-3" title="Overview">
    <section title="Loopback Mode" anchor="sect-3.1"><t>
    In loopback mode, the Session-Sender R1 initiates PLM test packets and the Session-Reflector R3
    forwards them just like data packets for the regular traffic back to the Session-Sender R1. 
    The PLM test packets are not punted at the Session-Reflector
    and does not process them and generate PLM return test packets.
    The Session-Reflector must not drop the loopback PLM test packets, 
    for example, due to a local policy provisioned. 
    No PLM test session is created on the Session-Reflector.</t>

    <t>The Source and Destination IP addresses in the PLM test packets are set to the Session-Reflector 
    and the Session-Sender IP addresses, respectively (representing the reverse direction path).
    The Source and Destination UDP ports in the PLM test packets 
    follow the procedure defined in <xref target="RFC8762"/>.  
    The IPv4 Time To Live (TTL) and IPv6 Hop Limit (HL) are set to 255.</t>

     </section>

      <section anchor="sect-3.2"
               title="Loopback Mode Enabled with Network Programming Function"
               toc="default">
      <t>In loopback mode enabled with network programming function,
      both transmit (T1) and receive (T2) timestamps in data plane are collected
      by the PLM test packets transmitted in loopback mode as shown in Figure 1.
      The network programming function optimizes the "operations of punt 
      and generate the PLM test packet" on the Session-Reflector 
      as timestamping is implemented in forwarding fast path in hardware. This helps to achieve 
      higher test session scale and faster failure detection interval.</t>

      <figure align="center"
              anchor="ure-loopback-mode-enabled-with-network-programming"
              title="Loopback Mode Enabled with Network Programming Function">
       <artwork>
                         T1                  T2
                        /                     \
               +-------+    PLM Test Packet    +-------+
               |       | - - - - - - - - - - - |       |
               |   R1  |======================||  R3   |
               |       |&lt;- - - - - - - - - - - |       |
               +-------+   Return Test Packet  +-------+
                        \  
                         T4 

             Session-Sender                 Session-Reflector
                                             (Timestamp, 
                                              Pop and Forward)
      </artwork>
      </figure>
   
      <t>The Session-Sender adds transmit 
      timestamp (T1) in the payload of the PLM test packet and clears the receive (T2) timestamp. 
      The Session-Reflector adds the receive timestamp (T2) in the 
      payload of the received PLM test 
      packet in forwarding fast path in hardware without punting the test packet to the slow path (or control-plane).
      The network programming function enables Session-Reflector to add the receive timestamp (T2)
      at a specific offset in the payload which is locally
      provisioned consistently in the network.
      The payload of the PLM test packet is not modified by the intermediate nodes.</t>

      <t>The Session-Reflector only
      adds the receive timestamp if the source IP address (in case of SR-MPLS) or 
      destination IP address (in case of SRv6) in the PLM test packet matches
      the local node address to ensure that the PLM test packet reaches the 
      intended Session-Reflector and the receive timestamp is returned by the intended Session-Reflector.</t>

      </section>

    <section title="Example Provisioning Model" anchor="sect-3.3"><t>
    An example provisioning model and typical measurement parameters are shown in Figure 2:</t>
 
    <figure title="    Example Provisioning Model" anchor="ure-example-provisioning-model"><artwork><![CDATA[

                               +------------+
                               | Controller |
                               +------------+
 PLM Mode                          /    \      Timestamp Label/SRV6 EB
   Loopback or Enhanced Mode      /      \       Timestamp Offset
 Timestamp Label/SRv6 EB         /        \      Timestamp Format
   Timestamp Format             /          \
 Missed Packet Count (N)       /            \
 Delay Threshold/Count (T/M)  /              \      
 Packet Loss Threshold (XofY)/                \
                            v                  v
                        +-------+           +-------+
                        |       |           |       |
                        |   R1  |===========|   R3  |
                        |       |           |       |
                        +-------+           +-------+
 
                      Session-Sender     Session-Reflector
]]></artwork>
    </figure>

    <t>Example of PLM mode is loopback mode.
    The values for Timestamp Label and SRv6 Endpoint Behaviour may be provisioned 
    as described in Section 6.
    Example of Timestamp Format is 64-bit PTPv2 <xref target="IEEE1588"/> and NTP.
    Example of Timestamp Offset is 16 and 32 bytes for the PLM test packet formats
    defined in this document. Threshold values for Missed Packet Count (N), Delay 
    Threshold and Packet Count (T/M) and Packet Loss Threshold (XofY) 
    are configured for generating notifications, as described in Section 7.</t>
    
    <t>The mechanisms to provision the
    Session-Sender and Session-Reflector are outside the scope of this document.</t>

     </section>
    </section>

    <section title="PLM Test Packet Formats" anchor="sect-4"><t>
    The PLM test packet formats for unauthenticated and authenticated modes
    are defined in this document as shown in Figure 3 those have 
    the transmit and receive timestamps at the same locations
    as the base STAMP test packets to leverage the existing hardware support for STAMP.</t>

   <figure title="PLM Test Packet Formats" anchor="ure-test-packet-format"><artwork><![CDATA[
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                     Sequence Number                           |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                     Transmit Timestamp (T1)                   |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Transmit Error Estimate      |  SSID                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                     Receive Timestamp (T2)                    |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Receive Error Estimate       |  MBZ                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  |                     MBZ (16 Octets)                           |
  |                                                               |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 

          PLM Test Packet Format in Unauthenticated Mode


  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        Sequence Number                        |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        MBZ (12 octets)                        |
  |                                                               |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        Transmit Timestamp (T1)                |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Transmit Error Estimate      |  SSID                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        MBZ (4 octets)                         |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        Receive Timestamp (T2)                 |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |  Receive Error Estimate       |  MBZ                          |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        MBZ (4 Octets)                         |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                                                               |
  |                        MBZ (48 octets)                        |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |                        HMAC (16 octets)                       |
  |                                                               |
  |                                                               |
  |                                                               |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

          PLM Test Packet Format in Authenticated Mode
]]></artwork>
    </figure>


   <t>Sequence Number is the sequence number of the PLM test packet according
   to its transmit order.  It starts with zero and is incremented by one
   for each subsequent PLM test packet.</t>

   <t>SSID (16-bits): PLM Session Identifier. Uses the procedure defined in <xref target="RFC8762"/>.</t>

   <t>Transmit Timestamp and Transmit Error Estimate are the Session-Sender's transmit
   timestamp and error estimate for the PLM test packet, respectively.</t>  
   
   <t>Receive Timestamp and Receive Error Estimate are 
   the Session-Reflector's receive timestamp and error estimate, respectively.</t> 

   <t>The timestamp and error estimate fields
   follow the definition and formats defined in Section 4.1.2 in
   [RFC8762]. The timestamp format used by default is 64-bit PTPv2 <xref target="IEEE1588"/>.
   </t> 

   <t>
   HMAC: The use of the HMAC field is described in Section 4.4 of <xref target="RFC8762"/>.</t>

   <t>
   MBZ: Must be Zero. It MUST be all zeroed on the transmission and MUST
   be ignored on receipt.</t>

    </section>


    <section anchor="sect-5" title="PLM Procedure">
     <t>For performance and liveness monitoring of an end-to-end SR path including SR Policy, 
     PLM test packets in loopback mode are used.</t>
 
     <t>For SR Policy, the PLM test packets are transmitted 
     using the Segment List (SL) of the Candidate-Path 
     <xref target="I-D.ietf-spring-segment-routing-policy"/>.
     When a Candidate-Path has more than one Segment Lists, multiple
     PLM test packets are sent, one using each Segment List. The PLM return test packets are received by
     the Session-Sender via IP/UDP <xref target="RFC0768"/> return path by default. 
     The Segment List of the return SR path can be added in the PLM test packet header
     to receive the return test packet on a specific path using the Binding SID 
     <xref target="I-D.ietf-pce-binding-label-sid"/> or Segment List of the Reverse SR Policy <xref
     target="I-D.ietf-pce-sr-bidir-path"/>.</t>

    <section anchor="sect-5.1" title="PLM for SR-MPLS Policies">
     <t>The PLM test packets are transmitted using the MPLS header for each Label Stack of the SR-MPLS
     Policy Candidate-Path(s) as shown in Figure 4. In case of IP/UDP
     return path, the MPLS header is removed by the Session-Reflector.
     The Label Stack can contain a reverse SR-MPLS 
     path to receive the PLM return test packet on a specific path. 
     In this case, the MPLS header will not be removed
     by the Session-Reflector.</t>

        <figure anchor="ure-test-packet-header-for-sr-mpls"
                title="Example PLM Test Packet for SR-MPLS">
        <artwork>  
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(1)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  .                                                               .
  .                                                               .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(n)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | IP Header                                                     |
  .  Source IP Address = Session-Reflector IPv4 or IPv6 Address   .
  .  Destination IP Address = Session-Sender IPv4 or IPv6 Address .
  .  Protocol = UDP                                               .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Session-Sender                    .
  .  Destination Port = As chosen by Session-Sender               .
  .                                                               .
  +---------------------------------------------------------------+
  |  Payload as defined in Figure 3                               |
  .                                                               .
  +---------------------------------------------------------------+
    </artwork>
        </figure>
      </section>

   <section anchor="sect-5.2" title="PLM for SRv6 Policies">
    <t>The PLM test packets for SRv6 data plane are transmitted using the 
    Segment Routing Header (SRH) <xref target="RFC8754"/> for each 
    Segment List of the SRv6 Policy Candidate-Path(s) as shown in Figure 5. In case of IP/UDP
    return path, the SRH is removed by the Session-Reflector.
    The Segment List can contain a reverse SRv6 path to receive 
    the PLM return test packet on a specific path. In this case, the 
    SRH will not be removed by the Session-Reflector.
    When the PLM return test packet contains an SRH at the Session-Sender,
    the procedure defined for upper-layer header processing for SRv6 SIDs
    in <xref target="I-D.ietf-spring-srv6-network-programming"/> is used to process the
    UDP header in the received PLM test packets.</t>

        <figure anchor="ure-test-packet-header-for-srv6"
                title="Example PLM Test Packet for SRv6">
          <artwork>  
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Session-Sender IPv6 Address              .
  .  Destination IP Address = Destination IPv6 Address            .
  .                                                               .
  +---------------------------------------------------------------+
  | SRH as specified in RFC 8754                                  |
  .     &lt;Segment List&gt;                                            .
  .                                                               .
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Session-Reflector IPv6 Address           .
  .  Destination IP Address = Session-Sender IPv6 Address         .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Session-Sender                    .
  .  Destination Port = As chosen by Session-Sender               .
  .                                                               .
  +---------------------------------------------------------------+
  |  Payload as defined in Figure 3                               |
  .                                                               .
  +---------------------------------------------------------------+
      </artwork>
        </figure>
      </section>
    </section>

    <section anchor="sect-6"
             title="Enhanced PLM Procedure">
      <t>The enhanced performance and liveness monitoring of an end-to-end SR path including SR Policy is
      defined using the PLM test packets in loopback mode enabled with network programming function.</t>

      <section anchor="sect-6.1"
               title="Enhanced PLM with Timestamp Label for SR-MPLS Policies"
               toc="default">
      <t>In this document, two new Timestamp Labels 
      are defined for SR-MPLS data plane to enable network programming
      function for "timestamp, pop and forward" the received test packet.</t>

      <t>In the PLM test packets for SR-MPLS Policies,
      a Timestamp Label is added in the MPLS header as shown in Figure 6, to
      collect "Receive Timestamp" field in the payload of the PLM test packet. 
      The Label Stack for the reverse SR-MPLS path can be added after the Timestamp 
      Label to receive the PLM return test packet on a specific path.
      When a Session-Reflector receives a packet with
      Timestamp Label, after timestamping the packet at a specific offset, 
      the Session-Reflector pops the Timestamp Label and forwards the
      packet using the next label or IP header in the packet (just like the 
      data packets for the regular traffic).</t>

        <figure anchor="ure-test-packet-header-for-sr-mpls-with-timestamp-label"
                title="Example PLM Test Packet with Timestamp Label for SR-MPLS">
          <artwork>
  0                   1                   2                   3
  0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(1)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  .                                                               .
  .                                                               .
  .                                                               .
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Label(n)                   | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |            Extension Label (15)       | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  |       Timestamp Label (TBA1 or TBA2)  | TC  |S|      TTL      |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
  | IP Header                                                     |
  .  Source IP Address = Session-Reflector IPv4 or IPv6 Address   .
  .  Destination IP Address = Session-Sender IPv4 or IPv6 Address .
  .  Protocol = UDP                                               .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Session-Sender                    .
  .  Destination Port = As chosen by Session-Sender               .
  .                                                               .
  +---------------------------------------------------------------+
  |  Payload as defined in Figure 3                               |
  .                                                               .
  +---------------------------------------------------------------+
  </artwork>
  </figure>


    <section title="Timestamp Labels Allocation" anchor="sect-6.1.1" toc="default"><t>
      The timestamp Labels for unauthenticated and authenticated modes can be allocated using one of the following
      methods:</t>

    <t><list style="symbols"><t>Labels (values TBA1 and TBA2) assigned by IANA from the "Extended
      Special-Purpose MPLS Values" <xref target="I-D.ietf-mpls-spl-terminology"/>. 
      For Label (value TBA1), the timestamp offset is fixed at byte-offset 16 from the start of 
      the payload for the unauthenticated mode, and Label (value TBA2) at byte-offset 
      32 from the start of the payload for the authenticated mode, both using the timestamp format 64-bit PTPv2.</t>

    <t>Labels allocated by a Controller from the global table of the
      Session-Reflector.  The Controller provisions the labels on both
      Session-Sender and Session-Reflector, as well as timestamp offsets and timestamp formats.</t>

    <t>Labels allocated by the Session-Reflector. The signaling and IGP flooding
      extension for the labels (including timestamp offsets and timestamp formats) 
      are outside the scope of this document.</t>

    </list>
    </t>

    </section>

      <section anchor="sect-6.1.2"
               title="Node Capability for Timestamp Label" toc="default">
      <t>The PLM Session-Sender needs 
      to know if the Session-Reflector can process the Timestamp Label to avoid dropping PLM test packets. 
      The signaling extension for this capability exchange is outside the scope of this document.</t>

      </section>
      </section>

      <section anchor="sect-6.2"
               title="Enhanced PLM with Timestamp Endpoint Function for SRv6 Policies">
      <t>The <xref target="I-D.ietf-spring-srv6-network-programming"/> defines 
      SRv6 Endpoint Behaviours (EB) for SRv6 nodes.
      In this document, two new Timestamp Endpoint Behaviours 
      are defined for Segment Routing Header (SRH) 
      <xref target="RFC8754"/> to enable
      "Timestamp and Forward (TSF)" function for the received test packets.</t>

      <t>In the PLM test packets for SRv6 Policies,
      Timestamp Endpoint Function (End.TSF) is carried with the target Segment Identifier (SID) in SRH 
      <xref target="RFC8754"/> as shown in Figure 7,
      to collect "Receive Timestamp" field in the payload of the PLM test packet. 
      The Segment List for the reverse path can be added after the target SID 
      to receive the PLM return test packet on a specific path.
      When a Session-Reflector receives a packet with
      Timestamp Endpoint (End.TSF) for the target SID which is local, 
      after timestamping the packet at a specific offset,
      the Session-Reflector forwards the packet using the next SID or IP header in the packet 
      (just like the data packets for the regular traffic).</t>

        <figure anchor="ure-test-packet-header-for-srv6-with-endpoint-function"
                title="Example PLM Test Packet with Endpoint Function for SRv6">
          <artwork>
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Session-Sender IPv6 Address              .
  .  Destination IP Address = Destination IPv6 Address            .
  .                                                               .
  +---------------------------------------------------------------+
  | SRH as specified in RFC 8754                                  |
  .     &lt;Segment List&gt;                                            .
  .     SRv6 Endpoint End.TSF (value TBA3 or TBA4)                .
  .                                                               .
  +---------------------------------------------------------------+
  | IP Header                                                     |
  .  Source IP Address = Session-Reflector IPv6 Address           .
  .  Destination IP Address = Session-Sender IPv6 Address         .
  .                                                               .
  +---------------------------------------------------------------+
  | UDP Header                                                    |
  .  Source Port = As chosen by Session-Sender                    .
  .  Destination Port = As chosen by Session-Sender               .
  .                                                               .
  +---------------------------------------------------------------+
  |  Payload as defined in Figure 3                               |
  .                                                               .
  +---------------------------------------------------------------+
  </artwork>
 </figure>


    <section title="Timestamp Endpoint Functions Assignment" anchor="sect-6.2.1" toc="default"><t>
      The Timestamp Endpoint Functions for "Timestamp and Forward" can be signaled using one of the following methods:</t>

    <t><list style="symbols"><t>Timestamp Endpoint Functions (values TBA3 and TBA4) 
      assigned by IANA from the "SRv6 Endpoint Behaviors Registry".
      For endpoint behaviour (value TBA3), the timestamp offset is fixed at byte-offset 16 from the start of 
      the payload for the unauthenticated mode, and endpoint behaviour (value TBA4) at byte-offset 
      32 from the start of the payload for the authenticated mode, both using the timestamp format 64-bit PTPv2.</t>

    <t>Timestamp Endpoint Functions assigned by a Controller.  The Controller provisions the values on both
      Session-Sender and Session-Reflector, as well as timestamp offsets and timestamp formats.</t>

    <t>Timestamp Endpoint Functions assigned by the Session-Reflector. The signaling and IGP flooding
      extension for the endpoint functions (including timestamp offsets and timestamp formats) 
      are outside the scope of this document.</t>

    </list>
    </t>
      </section>

      <section anchor="sect-6.2.2"
               title="Node Capability for Timestamp Endpoint Function"
           toc="default">
      <t>The PLM Session-Sender needs 
      to know if the Session-Reflector can process the Timestamp Endpoint Function to avoid dropping PLM test packets.
      The signaling extension for this capability exchange is outside the scope of this document.</t>
      </section>

    </section>
   </section>

   <section anchor="sect-7" title="Example PLM Failure Notifications" toc="default">
      <t>Liveness or connectivity success for an end-to-end SR path is 
      initially notified as soon as one or more 
      PLM return test packets are received at the Session-Sender.</t>

      <t>Liveness or connectivity failure for an end-to-end SR path is notified when consecutive N number of PLM return test
      packets are not received at the Session-Sender, where N (Missed PLM Packet Count) is a locally
      provisioned value.</t>

      <t>The round-trip packet loss for an end-to-end SR path is calculated using the Sequence Number in the PLM test packets.
      The packet loss metric is notified when X number of PLM test packets were lost
      out of last Y number of PLM test packets transmitted by the Session-Sender,
      where Threshold XofY is locally provisioned value.</t> 

      <t>Similarly, the delay metrics are notified, as an example, when consecutive 
      M number of PLM test packets have measured delay values exceed user-configured 
      threshold T, where M (Delay Exceeded Packet Count) and T 
      (Absolute and Percentage Delay Threshold) are also locally provisioned values.</t>

      <t>In both loopback modes, the timestamps T1 and T4 are used to measure round-trip delay.
      In loopback mode enabled with network programming function, the timestamps T1 and T2 are used
      to measure one-way delay.</t>

      <t>In loopback mode, a failure on the reverse direction path can cause 
      the PLM return test packets to not reach the Session-Sender.
      This is also true in the case where the PLM return test packets were generated 
      by the Session-Reflector e.g. to indicate Session-Sender of a failure on the 
      forward direction path.  As such, the test packet based methods 
      have a limitation of false detection due to a reverse direction failure.</t> 

   </section>


   <section anchor="sect-8" title="Security Considerations" toc="default">
      <t>The Performance and Liveness Monitoring is intended for deployment in
      the well-managed private and service provider networks. As such, it assumes
      that a node involved in a monitoring operation has previously verified
      the integrity of the path and the identity of the Session-Reflector.</t>

      <t>If desired, attacks can be mitigated by performing basic
      validation and sanity checks, at the Session-Sender, of the timestamp
      fields in received PLM packets. The minimal state
      associated with these protocols also limits the extent of disruption
      that can be caused by a corrupt or invalid packet to a single
      test cycle. </t>
      
      <t>Use of HMAC-SHA-256 in the authenticated mode protects the data
      integrity of the test packets. Cryptographic measures may 
      be enhanced by the correct configuration
      of access-control lists and firewalls.</t>

      <t>The security considerations specified in <xref target="RFC8762"/>
      also apply to the procedures defined in this document.</t> 

   </section>

   <section anchor="sect-9" title="IANA Considerations" toc="default">
      <t>IANA maintains the "Special-Purpose Multiprotocol Label Switching
      (MPLS) Label Values" registry (see
      &lt;https://www.iana.org/assignments/mpls-label-values/mpls-label-values.xml&gt;).
      IANA is requested to allocate Timestamp Label value from the "Extended
      Special-Purpose MPLS Label Values" registry:</t>

      <figure>
        <artwork>
  +-------------+---------------------------------+---------------+
  | Value       | Description                     | Reference     |
  +-------------+---------------------------------+---------------+
  | TBA1        | Timestamp Label                 | This document |
  |             | for offset 16                   |               |
  |             | for Unauthenticated Mode        |               |
  +-------------+---------------------------------+---------------+
  | TBA2        | Timestamp Label                 | This document |
  |             | for offset 32                   |               |
  |             | for Authenticated Mode          |               |
  +-------------+---------------------------------+---------------+
      </artwork>
      </figure>

      <t>IANA is requested to allocate, within the "SRv6 Endpoint Behaviors
      Registry" sub-registry belonging to the top-level "Segment Routing 
      Parameters" registry <xref
      target="I-D.ietf-spring-srv6-network-programming"/>, the following
      allocation:</t>

      <figure>
        <artwork>     
  +-------------+---------------------------------+---------------+
  | Value       | Endpoint Behavior               | Reference     |
  +-------------+---------------------------------+---------------+
  | TBA3        | End.TSF (Timestamp and Forward) | This document |
  |             | for offset 16                   |               |
  |             | for Unauthenticated Mode        |               |
  +-------------+---------------------------------+---------------+
  | TBA4        | End.TSF (Timestamp and Forward) | This document |
  |             | for offset 32                   |               |
  |             | for Authenticated Mode          |               |
  +-------------+---------------------------------+---------------+
    
    </artwork>
      </figure>
   </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC0768;
      &RFC2119;
      &RFC8174;
      &RFC8762;
      &I-D.ietf-spring-srv6-network-programming;
    </references>

    <references title="Informative References">
      <reference anchor="IEEE1588">
        <front>
          <title>1588-2008 IEEE Standard for a Precision Clock Synchronization
          Protocol for Networked Measurement and Control Systems</title>

          <author>
            <organization>IEEE</organization>
          </author>

          <date month="March" year="2008"/>
        </front>
      </reference>

      &RFC7880;
      &RFC8402;
      &RFC8754;
      &I-D.ietf-spring-segment-routing-policy;
      &I-D.ietf-mpls-spl-terminology;
      &I-D.ietf-pce-binding-label-sid;
      &I-D.ietf-pce-sr-bidir-path;
    </references>

   <section title="Acknowledgments" numbered="no" anchor="acknowledgments"><t>
   The authors would like to thank Greg Mirsky, Mach Chen, Kireeti Kompella, and Adrian Farrel for providing
   the review comments.</t>
    </section>

  </back>
</rfc>
